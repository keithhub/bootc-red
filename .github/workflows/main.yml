name: Build OS Image & Publish Kickstart

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read    # To checkout the repository
  packages: write   # To push container images to GHCR
  pages: write      # To deploy to GitHub Pages
  id-token: write   # Required for OIDC with GitHub Pages deployment

jobs:
  build-and-publish-image:
    name: Build and Publish Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Image Name and Tags
        id: meta
        run: |
          # Construct the base image name. GHCR requires lowercase.
          IMAGE_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${IMAGE_OWNER_LOWER}/${REPO_NAME_LOWER}"
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          # Define tags: 'latest' and the commit SHA for versioning
          echo "tags=${IMAGE_NAME}:latest,${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "Full image name with tags: ${IMAGE_NAME}:latest, ${IMAGE_NAME}:${{ github.sha }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-kickstart:
    name: Publish Kickstart File to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-and-publish-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine GHCR Image Path for Kickstart
        id: image_path
        run: |
          # Ensure image owner and repo name are lowercase, matching the build job
          IMAGE_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          GHCR_IMAGE_PATH="ghcr.io/${IMAGE_OWNER_LOWER}/${REPO_NAME_LOWER}:latest"
          echo "ghcr_image_path=${GHCR_IMAGE_PATH}" >> $GITHUB_OUTPUT
          echo "Kickstart will be updated to use image: ${GHCR_IMAGE_PATH}"

      - name: Update Kickstart file with dynamic GHCR image path
        run: |
          sed -i "s|%%GHCR_IMAGE_PATH%%|${{ steps.image_path.outputs.ghcr_image_path }}|g" static/default.ks
          echo "Updated default.ks content:"
          cat static/default.ks

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload Kickstart artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './static/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    outputs:
      kickstart_file_url: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/default.ks"


  notify-url:
    name: Notify Kickstart URL
    runs-on: ubuntu-latest
    needs: publish-kickstart
    if: success()
    steps:
      - name: Echo Kickstart URL
        run: |
          echo "Kickstart file deployment initiated!"
          echo "It should be available shortly at: ${{ needs.publish-kickstart.outputs.kickstart_file_url }}"
          echo "Note: GitHub Pages deployment can take a minute or two to become live after the workflow completes."
